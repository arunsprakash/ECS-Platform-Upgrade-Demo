<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.0.6.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.example</groupId>
	<artifactId>demo</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>demo</name>
	<description>Demo project for Spring Boot</description>

	<properties>
		<spring-boot.version>2.0.6.RELEASE</spring-boot.version>
        <spring.boot.admin.version>2.0.1</spring.boot.admin.version>
        <spring-cloud.version>Finchley.RELEASE</spring-cloud.version>
        <spring-data-hazelcast.version>2.0</spring-data-hazelcast.version>
        <jasypt.version>3.0.3</jasypt.version>
        <zipped.artifact.fileName>${project.artifactId}-${project.version}</zipped.artifact.fileName>
        <com.lmax.disruptor.version>3.4.2</com.lmax.disruptor.version>
        <log4j.version>1.2.17</log4j.version>
        <io.springfox.version>2.9.2</io.springfox.version>
        <com.oracle.ojdbc8.version>19.7.0.0</com.oracle.ojdbc8.version>
        <io.zipkin.java.version>2.10.3</io.zipkin.java.version>
        <com.lmax.disruptor.version>3.4.2</com.lmax.disruptor.version>
        <jdk.tools.version>1.6</jdk.tools.version>
        <commons-io.version>2.6</commons-io.version>
        <commons-collections4.version>4.0</commons-collections4.version>
        <com.amazonaws.aws-java-sdk.version>1.11.391</com.amazonaws.aws-java-sdk.version>
        <com.hazelcast.aws.version>2.2</com.hazelcast.aws.version>
        <karate.version>0.9.1</karate.version>
        <cucumber.reporting.version>4.5.1</cucumber.reporting.version>
        <org.hibernate.hibernate-java8.version>5.2.17.Final</org.hibernate.hibernate-java8.version>
        <!-- GraphQL -->
        <com.graphql-java.graphql-java-tools.version>5.2.4</com.graphql-java.graphql-java-tools.version>
        <com.graphql-java.graphql-spring-boot-starter.version>5.0.2
        </com.graphql-java.graphql-spring-boot-starter.version>
        <com.graphql-java.graphql-java-extended-scalars>1.0.1</com.graphql-java.graphql-java-extended-scalars>
        <com.zhokhov.graphql.graphql-datetime-spring-boot-starter.version>1.5.1
        </com.zhokhov.graphql.graphql-datetime-spring-boot-starter.version>
        <com.graphql-java.graphiql-spring-boot-starter.version>5.0.2
        </com.graphql-java.graphiql-spring-boot-starter.version>
        <io.reactivex.rxjava2.rxjava.version>2.1.5</io.reactivex.rxjava2.rxjava.version>
        <codehaus.janino.version>3.1.2</codehaus.janino.version>
        <spdji.webutilities.version>1.2.0</spdji.webutilities.version>
        <!--    
        <io.leangen.graphql.graphql-spqr-spring-boot-starter.version>0.0.4</io.leangen.graphql.graphql-spqr-spring-boot-starter.version>
        <com.google.code.gson.version>2.6.2</com.google.code.gson.version>
        -->
        <!-- GraphQL -->
        <!--
        <local-lib-repo-dir>${basedir}/local-repository/repo</local-lib-repo-dir>
        -->
        <maven.build.timestamp.format>yyyyMMddHHmmss</maven.build.timestamp.format>
        <yearMonthDate>${maven.build.timestamp}</yearMonthDate>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <maven.checkstyle.version>3.0.0</maven.checkstyle.version>
        <checkstyle.version>6.18</checkstyle.version>
        <checkstyle.config.location>${basedir}/config/code-validation</checkstyle.config.location>
        <spotbugs.config.location>${basedir}/config/code-validation</spotbugs.config.location>
        <maven.surefire.version>3.0.0-M3</maven.surefire.version>
        <maven.failsafe.version>3.0.0-M3</maven.failsafe.version>
        <maven.sonar.version>3.6.0.1398</maven.sonar.version>
        <maven.spotbugs.version>3.1.11</maven.spotbugs.version>
        <maven.compiler.version>3.8.0</maven.compiler.version>
        <maven.assembly.version>3.1.1</maven.assembly.version>
        <maven.install.version>3.0.0-M1</maven.install.version>
        <build.helper.maven.plugin.version>3.0.0</build.helper.maven.plugin.version>
        <maven.resources.version>3.1.0</maven.resources.version>
        <maven.jacoco.version>0.8.3</maven.jacoco.version>
        <maven-dependency-plugin.version>3.1.1</maven-dependency-plugin.version>
        <maven.release.version>2.5.3</maven.release.version>
        <maven.javadoc.version>3.1.0</maven.javadoc.version>
        <maven.javadoc.skip>true</maven.javadoc.skip>
        <maven.pmd.plugin.version>3.11.0</maven.pmd.plugin.version>
        <maven.jxr.plugin.version>3.0.0</maven.jxr.plugin.version>
        <findsecbugs-plugin.version>1.8.0</findsecbugs-plugin.version>
        <junit.vmArgs>-Xms512m -Xmx512m</junit.vmArgs>
        <jacoco.outputDir>${project.build.directory}/coverage-reports</jacoco.outputDir>
        <jacoco.out.ut.file>jacoco-ut.exec</jacoco.out.ut.file>
        <jacoco.out.it.file>jacoco-it.exec</jacoco.out.it.file>
        <sonar.projectKey>SPDJI-SPDJIDATASERVICES</sonar.projectKey>
        <sonar.moduleKey>${project.artifactId}</sonar.moduleKey>
        <sonar.projectName>SPDJIDATASERVICES</sonar.projectName>
        <sonar.projectVersion>${yearMonthDate}</sonar.projectVersion>
        <sonar.language>java</sonar.language>
        <sonar.java.source>${java.version}</sonar.java.source>
        <sonar.sourceEncoding>${project.build.sourceEncoding}</sonar.sourceEncoding>
        <sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
        <sonar-jacoco-listeners.version>1.4</sonar-jacoco-listeners.version>
        <sonar.jacoco.reportPaths>${jacoco.outputDir}/${jacoco.out.ut.file}</sonar.jacoco.reportPaths>
        <sonar.jacoco.itReportPaths>${jacoco.outputDir}/${jacoco.out.it.file}</sonar.jacoco.itReportPaths>
        <sonar.exclusions>src/main/resources/**/*, src/main/webapp/**/*,target/generated-sources/**/*</sonar.exclusions>
        <sonar.java.checkstyle.reportPaths>target/checkstyle-result.xml</sonar.java.checkstyle.reportPaths>
        <sonar.java.spotbugs.reportPaths>target/spotbugsXml.xml</sonar.java.spotbugs.reportPaths>
        <skip.unit.test>true</skip.unit.test>
        <skip.e2e.test>true</skip.e2e.test>
        <skip.static.analysis>true</skip.static.analysis>
        <environment.type>LOCAL</environment.type>
        <jasypt.encryptor.key>DATASERVICES-AWS-DEV</jasypt.encryptor.key>
        <spring.cloud.aws.version>2.1.1.RELEASE</spring.cloud.aws.version>
        <git-commit-id-plugin.version>2.2.6</git-commit-id-plugin.version>
        <skip.git.commit.plugin>true</skip.git.commit.plugin>
        <dockerfile-maven-plugin.version>1.4.13</dockerfile-maven-plugin.version>
        <skip.dockerfile.execution>false</skip.dockerfile.execution>
        <ecr.repo.url>699183880494.dkr.ecr.us-east-1.amazonaws.com</ecr.repo.url>
        <lombok.version>1.18.8</lombok.version>
        <json.version>20200518</json.version>
	</properties>

	  <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-log4j2</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.codehaus.janino</groupId>
            <artifactId>janino</artifactId>
            <version>${codehaus.janino.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-logging</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-mail</artifactId>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jsr310</artifactId>
        </dependency>
        <!-- <dependency>
            <groupId>com.oracle</groupId>
            <artifactId>ojdbc8</artifactId>
            <version>${com.oracle.ojdbc8.version}</version>
        </dependency> -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>com.vaadin.external.google</groupId>
                    <artifactId>android-json</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.codehaus.sonar-plugins.java</groupId>
            <artifactId>sonar-jacoco-listeners</artifactId>
            <version>${sonar-jacoco-listeners.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.github.tomakehurst</groupId>
            <artifactId>wiremock-standalone</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jdbc</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>com.github.ulisesbocchio</groupId>
            <artifactId>jasypt-spring-boot-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger2</artifactId>
            <version>${io.springfox.version}</version>
        </dependency>
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger-ui</artifactId>
            <version>${io.springfox.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.data</groupId>
            <artifactId>spring-data-solr</artifactId>
        </dependency>
        <dependency>
            <groupId>com.graphql-java</groupId>
            <artifactId>graphql-java-tools</artifactId>
            <version>${com.graphql-java.graphql-java-tools.version}</version>
        </dependency>
        <dependency>
            <groupId>com.graphql-java</groupId>
            <artifactId>graphql-spring-boot-starter</artifactId>
            <version>${com.graphql-java.graphql-spring-boot-starter.version}</version>
        </dependency>
        <dependency>
            <groupId>com.graphql-java</groupId>
            <artifactId>graphql-java-extended-scalars</artifactId>
            <version>${com.graphql-java.graphql-java-extended-scalars}</version>
        </dependency>
        <dependency>
            <groupId>com.zhokhov.graphql</groupId>
            <artifactId>graphql-datetime-spring-boot-starter</artifactId>
            <version>${com.zhokhov.graphql.graphql-datetime-spring-boot-starter.version}</version>
        </dependency>
        <dependency>
            <groupId>com.graphql-java</groupId>
            <artifactId>graphiql-spring-boot-starter</artifactId>
            <version>${com.graphql-java.graphiql-spring-boot-starter.version}</version>
        </dependency>
    </dependencies>
    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>${maven.resources.version}</version>
                    <configuration>
                        <encoding>${project.build.sourceEncoding}</encoding>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>${maven-dependency-plugin.version}</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>analyze-only</goal>
                            </goals>
                            <configuration>
                                <failOnWarning>false</failOnWarning>
                                <ignoreNonCompile>true</ignoreNonCompile>
                                <ignoredUsedUndeclaredDependencies>
                                    <ignoredUsedUndeclaredDependency>junit:*:*</ignoredUsedUndeclaredDependency>
                                    <ignoredUsedUndeclaredDependency>org.mockito:*</ignoredUsedUndeclaredDependency>
                                    <ignoredUsedUndeclaredDependency>com.fasterxml.jackson.core:*
                                    </ignoredUsedUndeclaredDependency>
                                    <ignoredUsedUndeclaredDependency>org.slf4j:slf4j-api
                                    </ignoredUsedUndeclaredDependency>
                                </ignoredUsedUndeclaredDependencies>
                                <skip>${skip.static.analysis}</skip>
                            </configuration>
                        </execution>
                        <execution>
                            <id>unpack</id>
                            <phase>package</phase>
                            <goals>
                                <goal>unpack</goal>
                            </goals>
                            <configuration>
                                <artifactItems>
                                    <artifactItem>
                                        <groupId>${project.groupId}</groupId>
                                        <artifactId>${project.artifactId}</artifactId>
                                        <version>${project.version}</version>
                                    </artifactItem>
                                </artifactItems>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>com.spotify</groupId>
                    <artifactId>dockerfile-maven-plugin</artifactId>
                    <version>${dockerfile-maven-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>default</id>
                            <goals>
                                <goal>build</goal>
                                <goal>push</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <repository>${ecr.repo.url}/data-services/${project.artifactId}</repository>
                        <tag>${project.version}</tag>
                        <googleContainerRegistryEnabled>false</googleContainerRegistryEnabled>
                        <skip>true</skip>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven.compiler.version}</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <showDeprecation>true</showDeprecation>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven.surefire.version}</version>
                <configuration>
                    <excludes>
                        <exclude>**/*KarateTest.java</exclude>
                    </excludes>
                    <argLine>${junit.vmArgs} @{surefireArgLine}</argLine>
                    <properties>
                        <property>
                            <name>listener</name>
                            <value>org.sonar.java.jacoco.JUnitListener</value>
                        </property>
                    </properties>
                    <systemPropertyVariables>
                        <ENVIRONMENT_TYPE>${environment.type}</ENVIRONMENT_TYPE>
                    </systemPropertyVariables>
                    <environmentVariables>
                        <ENVIRONMENT_TYPE>${environment.type}</ENVIRONMENT_TYPE>
                        <JASYPT_ENCRYPTOR_KEY>${jasypt.encryptor.key}</JASYPT_ENCRYPTOR_KEY>
                        <JASYPT_ENCRYPTOR_ALGORITHM>PBEWithMD5AndDES</JASYPT_ENCRYPTOR_ALGORITHM>
                        <SPVDE_APP_DB_ENC>PBEWithMD5AndDES</SPVDE_APP_DB_ENC>
                    </environmentVariables>
                    <parallel>classes</parallel>
                    <threadCount>5</threadCount>
                    <useSystemClassLoader>false</useSystemClassLoader>
                    <testFailureIgnore>true</testFailureIgnore>
                    <skip>${skip.unit.test}</skip>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${maven.jacoco.version}</version>
                <executions>
                    <execution>
                        <id>prepare-jacoco-runtime-agent</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                        <configuration>
                            <destFile>${jacoco.outputDir}/${jacoco.out.ut.file}</destFile>
                            <propertyName>surefireArgLine</propertyName>
                            <append>true</append>
                        </configuration>
                    </execution>
                    <execution>
                        <id>create-code-coverage-report</id>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <configuration>
                            <dataFile>${jacoco.outputDir}/${jacoco.out.ut.file}</dataFile>
                            <outputDirectory>${jacoco.outputDir}/jacoco-ut</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
                <configuration>
                    <skip>${skip.unit.test}</skip>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>${maven.failsafe.version}</version>
                <configuration>
                    <includes>
                        <include>**/*KarateTest.java</include>
                    </includes>
                    <skip>${skip.e2e.test}</skip>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>${maven.checkstyle.version}</version>
                <executions>
                    <execution>
                        <id>run-check-style</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>com.puppycrawl.tools</groupId>
                        <artifactId>checkstyle</artifactId>
                        <version>${checkstyle.version}</version>
                    </dependency>
                </dependencies>
                <configuration>
                    <configLocation>${checkstyle.config.location}/checkstyle.xml</configLocation>
                    <suppressionsLocation>
                        ${checkstyle.config.location}/checkstyle-suppressions.xml
                    </suppressionsLocation>
                    <skip>${skip.static.analysis}</skip>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-pmd-plugin</artifactId>
                <version>${maven.pmd.plugin.version}</version>
                <executions>
                    <execution>
                        <id>run-pmd-check</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>pmd</goal>
                            <goal>cpd</goal>
                        </goals>
                        <configuration>
                            <rulesets>
                                <ruleset>/category/java/bestpractices.xml</ruleset>
                            </rulesets>
                            <targetJdk>${java.version}</targetJdk>
                            <skipEmptyReport>false</skipEmptyReport>
                            <linkXRef>false</linkXRef>
                            <skip>${skip.static.analysis}</skip>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.github.spotbugs</groupId>
                <artifactId>spotbugs-maven-plugin</artifactId>
                <version>${maven.spotbugs.version}</version>
                <executions>
                    <execution>
                        <id>run-spot-bugs</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>spotbugs</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <failOnError>false</failOnError>
                    <fork>false</fork>
                    <spotbugsXmlOutput>true</spotbugsXmlOutput>
                    <excludeFilterFile>${spotbugs.config.location}/spotbugs-suppressions.xml</excludeFilterFile>
                    <threshold>Low</threshold>
                    <effort>Max</effort>
                    <xmlOutput>true</xmlOutput>
                    <plugins>
                        <plugin>
                            <groupId>com.h3xstream.findsecbugs</groupId>
                            <artifactId>findsecbugs-plugin</artifactId>
                            <version>LATEST</version>
                        </plugin>
                    </plugins>
                    <skip>${skip.static.analysis}</skip>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
                <version>${maven.release.version}</version>
                <configuration>
                    <preparationGoals>clean compile</preparationGoals>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>${maven.javadoc.version}</version>
                <configuration>
                    <doclint>none</doclint>
                    <skip>${maven.javadoc.skip}</skip>
                </configuration>
            </plugin>
            <plugin>
		        <groupId>org.springframework.boot</groupId>
		        <artifactId>spring-boot-maven-plugin</artifactId>
		        <executions>
		            <execution>
		                <goals>
		                    <goal>repackage</goal>
		                </goals>
		            </execution>
		       </executions>
			</plugin>
            <plugin>
                <groupId>pl.project13.maven</groupId>
                <artifactId>git-commit-id-plugin</artifactId>
                <version>${git-commit-id-plugin.version}</version>
                <executions>
                    <execution>
                        <id>get-the-git-infos</id>
                        <goals>
                            <goal>revision</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <skip>${skip.git.commit.plugin}</skip>
                    <dotGitDirectory>${project.basedir}/.git</dotGitDirectory>
                    <prefix>git</prefix>
                    <verbose>false</verbose>
                    <generateGitPropertiesFile>true</generateGitPropertiesFile>
                    <generateGitPropertiesFilename>${project.build.outputDirectory}/git.properties
                    </generateGitPropertiesFilename>
                    <format>json</format>
                    <gitDescribe>
                        <skip>false</skip>
                        <always>false</always>
                        <dirty>-dirty</dirty>
                    </gitDescribe>
                </configuration>
            </plugin>
        </plugins>
    </build>
    <profiles>
        <profile>
            <id>unit-test</id>
            <properties>
                <skip.unit.test>false</skip.unit.test>
            </properties>
        </profile>
        <profile>
            <id>e2e-test</id>
            <properties>
                <skip.e2e.test>false</skip.e2e.test>
            </properties>
        </profile>
        <profile>
            <id>static-analysis</id>
            <properties>
                <skip.static.analysis>false</skip.static.analysis>
            </properties>
        </profile>
    </profiles>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>com.github.ulisesbocchio</groupId>
                <artifactId>jasypt-spring-boot-starter</artifactId>
                <version>${jasypt.version}</version>
            </dependency>
            <dependency>
                <groupId>com.hazelcast</groupId>
                <artifactId>spring-data-hazelcast</artifactId>
                <version>${spring-data-hazelcast.version}</version>
            </dependency>
            <dependency>
              <groupId>com.spglobal.spdji.web</groupId>
              <artifactId>hazelcast-client-discovery-utils</artifactId>
              <version>${spdji.webutilities.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>${commons-io.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-collections4</artifactId>
                <version>${commons-collections4.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-aws</artifactId>
                <version>${spring.cloud.aws.version}</version>
                <type>pom</type>
            </dependency>
            <dependency>
                <groupId>org.json</groupId>
                <artifactId>json</artifactId>
                <version>${json.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

</project>
